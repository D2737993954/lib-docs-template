/*
 * @Author: dyb-dev
 * @Date: 2024-08-20 23:10:20
 * @LastEditors: dyb-dev
 * @LastEditTime: 2024-08-21 15:24:36
 * @FilePath: /lib-docs-template/tsconfig.app.json
 * @Description: app环境ts配置
 */

{
    "extends": "@vue/tsconfig/tsconfig.dom.json",
    "include": [
        "src/**/*.ts",
        "src/**/*.d.ts",
        "src/**/*.tsx",
        "src/**/*.vue",
        ".vitepress/theme/**/*.ts",
        ".vitepress/theme/**/*.vue",
        "types/**/*.ts",
        "types/**/*.d.ts"
    ],
    "exclude": ["node_modules", "**/node_modules", ".history"],
    "compilerOptions": {
        // 指定要包含的库
        "lib": ["ES2020", "DOM", "DOM.Iterable", "WebWorker"],
        // 指定要包含的类型定义文件
        "types": ["vite-plugin-pwa/client"],
        // 启用增量编译模式
        "composite": true,
        // 指定用于存储 TypeScript 编译器在增量编译模式下生成的编译信息的文件路径，以便下次编译时可以使用
        "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
        // 不允许隐式的any类型存在
        "noImplicitAny": true,
        // 跳过对所有定义文件（即 .d.ts 文件）的类型检查
        "skipLibCheck": true,
        // ts编译只做类型检查，不生成js文件
        "noEmit": true,
        // 导入类型时 必须使用 import type 语法
        "verbatimModuleSyntax": true,
        // 导入模块时允许使用.ts或者.js文件后缀
        "allowImportingTsExtensions": true,
        // 设置基础路径，解决模块导入路径问题
        "baseUrl": "./",
        // 配置路径映射，简化模块导入路径
        "paths": {
            "@/*": ["./src/*"],
            "@vitepress-demo-preview/component": ["./node_modules/@vitepress-demo-preview/component/dist/index.d.ts"]
        }
    }
}
